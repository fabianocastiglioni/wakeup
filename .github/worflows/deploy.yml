# Nome do fluxo de trabalho que aparecerá na aba "Actions" do GitHub
name: Deploy to GitHub Pages

# Gatilho: Executar este fluxo sempre que houver um 'push' no branch 'main'
on:
  push:
    branches:
      - main

# Permissões necessárias para o job poder publicar no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Jobs que serão executados
jobs:
  deploy:
    # Define o ambiente de publicação para o GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # O tipo de máquina virtual que o job vai usar
    runs-on: ubuntu-latest

    # Passos que o job irá executar em sequência
    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. O PASSO MAIS IMPORTANTE: Encontra e substitui o placeholder pela chave real
      - name: Replace API Key
        # Usa o comando 'sed' para encontrar '%%GEMINI_API_KEY%%' no index.html
        # e substituir pelo valor do segredo que criamos no Passo 1.
        run: sed -i 's|%%GEMINI_API_KEY%%|${{ secrets.GEMINI_API_KEY }}|g' index.html
      
      # 3. Configura o ambiente para o GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 4. Cria o "artefato" (os arquivos do site) para publicação
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      
      # 5. Faz o upload do artefato para o GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      # 6. Publica (deploy) o site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
